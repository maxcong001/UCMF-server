/*
 * Nucmf_UECapabilityManagement
 *
 * Nucmf_UECapabilityManagement Service. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.0.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CreatedSubscription struct for CreatedSubscription
type CreatedSubscription struct {
	DicEntryId int32 `json:"dicEntryId"`
	ConfirmedExpires *time.Time `json:"confirmedExpires,omitempty"`
}

// NewCreatedSubscription instantiates a new CreatedSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatedSubscription(dicEntryId int32, ) *CreatedSubscription {
	this := CreatedSubscription{}
	this.DicEntryId = dicEntryId
	return &this
}

// NewCreatedSubscriptionWithDefaults instantiates a new CreatedSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatedSubscriptionWithDefaults() *CreatedSubscription {
	this := CreatedSubscription{}
	return &this
}

// GetDicEntryId returns the DicEntryId field value
func (o *CreatedSubscription) GetDicEntryId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.DicEntryId
}

// GetDicEntryIdOk returns a tuple with the DicEntryId field value
// and a boolean to check if the value has been set.
func (o *CreatedSubscription) GetDicEntryIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DicEntryId, true
}

// SetDicEntryId sets field value
func (o *CreatedSubscription) SetDicEntryId(v int32) {
	o.DicEntryId = v
}

// GetConfirmedExpires returns the ConfirmedExpires field value if set, zero value otherwise.
func (o *CreatedSubscription) GetConfirmedExpires() time.Time {
	if o == nil || o.ConfirmedExpires == nil {
		var ret time.Time
		return ret
	}
	return *o.ConfirmedExpires
}

// GetConfirmedExpiresOk returns a tuple with the ConfirmedExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatedSubscription) GetConfirmedExpiresOk() (*time.Time, bool) {
	if o == nil || o.ConfirmedExpires == nil {
		return nil, false
	}
	return o.ConfirmedExpires, true
}

// HasConfirmedExpires returns a boolean if a field has been set.
func (o *CreatedSubscription) HasConfirmedExpires() bool {
	if o != nil && o.ConfirmedExpires != nil {
		return true
	}

	return false
}

// SetConfirmedExpires gets a reference to the given time.Time and assigns it to the ConfirmedExpires field.
func (o *CreatedSubscription) SetConfirmedExpires(v time.Time) {
	o.ConfirmedExpires = &v
}

func (o CreatedSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dicEntryId"] = o.DicEntryId
	}
	if o.ConfirmedExpires != nil {
		toSerialize["confirmedExpires"] = o.ConfirmedExpires
	}
	return json.Marshal(toSerialize)
}

type NullableCreatedSubscription struct {
	value *CreatedSubscription
	isSet bool
}

func (v NullableCreatedSubscription) Get() *CreatedSubscription {
	return v.value
}

func (v *NullableCreatedSubscription) Set(val *CreatedSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatedSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatedSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatedSubscription(val *CreatedSubscription) *NullableCreatedSubscription {
	return &NullableCreatedSubscription{value: val, isSet: true}
}

func (v NullableCreatedSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatedSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


