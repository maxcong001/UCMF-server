/*
 * Nucmf_UECapabilityManagement
 *
 * Nucmf_UECapabilityManagement Service. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.0.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CreateSubscription struct for CreateSubscription
type CreateSubscription struct {
	NfId *string `json:"nfId,omitempty"`
	UcmfNotificationUri string `json:"ucmfNotificationUri"`
	SuggestedExpires *time.Time `json:"suggestedExpires,omitempty"`
}

// NewCreateSubscription instantiates a new CreateSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscription(ucmfNotificationUri string, ) *CreateSubscription {
	this := CreateSubscription{}
	this.UcmfNotificationUri = ucmfNotificationUri
	return &this
}

// NewCreateSubscriptionWithDefaults instantiates a new CreateSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionWithDefaults() *CreateSubscription {
	this := CreateSubscription{}
	return &this
}

// GetNfId returns the NfId field value if set, zero value otherwise.
func (o *CreateSubscription) GetNfId() string {
	if o == nil || o.NfId == nil {
		var ret string
		return ret
	}
	return *o.NfId
}

// GetNfIdOk returns a tuple with the NfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscription) GetNfIdOk() (*string, bool) {
	if o == nil || o.NfId == nil {
		return nil, false
	}
	return o.NfId, true
}

// HasNfId returns a boolean if a field has been set.
func (o *CreateSubscription) HasNfId() bool {
	if o != nil && o.NfId != nil {
		return true
	}

	return false
}

// SetNfId gets a reference to the given string and assigns it to the NfId field.
func (o *CreateSubscription) SetNfId(v string) {
	o.NfId = &v
}

// GetUcmfNotificationUri returns the UcmfNotificationUri field value
func (o *CreateSubscription) GetUcmfNotificationUri() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UcmfNotificationUri
}

// GetUcmfNotificationUriOk returns a tuple with the UcmfNotificationUri field value
// and a boolean to check if the value has been set.
func (o *CreateSubscription) GetUcmfNotificationUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UcmfNotificationUri, true
}

// SetUcmfNotificationUri sets field value
func (o *CreateSubscription) SetUcmfNotificationUri(v string) {
	o.UcmfNotificationUri = v
}

// GetSuggestedExpires returns the SuggestedExpires field value if set, zero value otherwise.
func (o *CreateSubscription) GetSuggestedExpires() time.Time {
	if o == nil || o.SuggestedExpires == nil {
		var ret time.Time
		return ret
	}
	return *o.SuggestedExpires
}

// GetSuggestedExpiresOk returns a tuple with the SuggestedExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscription) GetSuggestedExpiresOk() (*time.Time, bool) {
	if o == nil || o.SuggestedExpires == nil {
		return nil, false
	}
	return o.SuggestedExpires, true
}

// HasSuggestedExpires returns a boolean if a field has been set.
func (o *CreateSubscription) HasSuggestedExpires() bool {
	if o != nil && o.SuggestedExpires != nil {
		return true
	}

	return false
}

// SetSuggestedExpires gets a reference to the given time.Time and assigns it to the SuggestedExpires field.
func (o *CreateSubscription) SetSuggestedExpires(v time.Time) {
	o.SuggestedExpires = &v
}

func (o CreateSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NfId != nil {
		toSerialize["nfId"] = o.NfId
	}
	if true {
		toSerialize["ucmfNotificationUri"] = o.UcmfNotificationUri
	}
	if o.SuggestedExpires != nil {
		toSerialize["suggestedExpires"] = o.SuggestedExpires
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSubscription struct {
	value *CreateSubscription
	isSet bool
}

func (v NullableCreateSubscription) Get() *CreateSubscription {
	return v.value
}

func (v *NullableCreateSubscription) Set(val *CreateSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscription(val *CreateSubscription) *NullableCreateSubscription {
	return &NullableCreateSubscription{value: val, isSet: true}
}

func (v NullableCreateSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


