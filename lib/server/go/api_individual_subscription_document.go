/*
 * Nucmf_UECapabilityManagement
 *
 * Nucmf_UECapabilityManagement Service. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.0.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A IndividualSubscriptionDocumentApiController binds http requests to an api service and writes the service results to the http response
type IndividualSubscriptionDocumentApiController struct {
	service IndividualSubscriptionDocumentApiServicer
}

// NewIndividualSubscriptionDocumentApiController creates a default api controller
func NewIndividualSubscriptionDocumentApiController(s IndividualSubscriptionDocumentApiServicer) Router {
	return &IndividualSubscriptionDocumentApiController{ service: s }
}

// Routes returns all of the api route for the IndividualSubscriptionDocumentApiController
func (c *IndividualSubscriptionDocumentApiController) Routes() Routes {
	return Routes{ 
		{
			"DeleteIndividualSubcription",
			strings.ToUpper("Delete"),
			"/nucmf-uecm/v1/subscriptions/{subscriptionId}",
			c.DeleteIndividualSubcription,
		},
	}
}

// DeleteIndividualSubcription - unsubscribe from notifications
func (c *IndividualSubscriptionDocumentApiController) DeleteIndividualSubcription(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	subscriptionId := params["subscriptionId"]
	result, err := c.service.DeleteIndividualSubcription(r.Context(), subscriptionId)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
	
}
