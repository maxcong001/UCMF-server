/*
 * Nucmf_UECapabilityManagement
 *
 * Nucmf_UECapabilityManagement Service. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.0.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A SubscriptionsCollectionApiController binds http requests to an api service and writes the service results to the http response
type SubscriptionsCollectionApiController struct {
	service SubscriptionsCollectionApiServicer
}

// NewSubscriptionsCollectionApiController creates a default api controller
func NewSubscriptionsCollectionApiController(s SubscriptionsCollectionApiServicer) Router {
	return &SubscriptionsCollectionApiController{ service: s }
}

// Routes returns all of the api route for the SubscriptionsCollectionApiController
func (c *SubscriptionsCollectionApiController) Routes() Routes {
	return Routes{ 
		{
			"CreateIndividualSubcription",
			strings.ToUpper("Post"),
			"/nucmf-uecm/v1/subscriptions",
			c.CreateIndividualSubcription,
		},
	}
}

// CreateIndividualSubcription - Nucmf_UECapabilityManagement Subscribe service Operation
func (c *SubscriptionsCollectionApiController) CreateIndividualSubcription(w http.ResponseWriter, r *http.Request) { 
	createSubscription := &CreateSubscription{}
	if err := json.NewDecoder(r.Body).Decode(&createSubscription); err != nil {
		w.WriteHeader(http.StatusBadRequest)
		return
	}
	
	result, err := c.service.CreateIndividualSubcription(r.Context(), *createSubscription)
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
	
}
